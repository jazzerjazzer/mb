// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocked

import messagebird "github.com/messagebird/go-rest-api"
import mock "github.com/stretchr/testify/mock"

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// NewMessage provides a mock function with given fields: originator, recipients, body, msgParams
func (_m *Interface) NewMessage(originator string, recipients []string, body string, msgParams *messagebird.MessageParams) (*messagebird.Message, error) {
	ret := _m.Called(originator, recipients, body, msgParams)

	var r0 *messagebird.Message
	if rf, ok := ret.Get(0).(func(string, []string, string, *messagebird.MessageParams) *messagebird.Message); ok {
		r0 = rf(originator, recipients, body, msgParams)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*messagebird.Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []string, string, *messagebird.MessageParams) error); ok {
		r1 = rf(originator, recipients, body, msgParams)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
